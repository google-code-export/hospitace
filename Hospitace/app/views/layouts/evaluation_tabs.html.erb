
<% content_for :content do %>
  <ul class="nav nav-tabs">
    <%= tab_item(:observation,@evaluation) if can? :show, @evaluation %> 
  <%#= tab_item(:attachments,evaluation_attachments_path(@evaluation)) if can? :show, @observation %> 

    <% FormTemplate.all.each do |template| %>
      <% unless template.forms.where(:evaluation_id => @evaluation.id).any? %>
        <% form = Form.new({
            :form_template_id=>template.id,
            :evaluation_id=>@evaluation.id
          }) %>

        <%= tab_item("#{template.code}_new","/evaluations/#{@evaluation.id}/forms/new/#{template.code}") if can? :create, form %>
      <% else %>
        <% form = template.forms.where({:evaluation_id=>@evaluation.id}).first %>
        <%= tab_item("#{template.code}",evaluation_form_path(@evaluation,form.id)) if can? :show, Form %>
      <% end %>
    <% end %>

  <%#= tab_item(:verbal_evaluation,evaluation_b_path(@evaluation)) if can? :verbal_evaluation, "Document" %>
  <%#= tab_item(:opinion,evaluation_c_path(@evaluation)) if can? :opinion, "Document" %>
  <%#= tab_item(:final_report,evaluation_d_path(@evaluation),:read,User) if can? :final_report, "Document" %>
  </ul>
  <%= message( t("observation.warning"),@observation.state.long_message,@observation.state.actions) if !@observation.state.ok? && can?(:update,@observation) %>
  <%= content_for?(:news_content) ? yield(:news_content) : yield %>
<% end %>
<%= render :template => 'layouts/application' %>